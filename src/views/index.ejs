<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>โคจังเองค่า</title>
    <link rel="stylesheet" href="style.css">
</head>

<body onload="onLoad()">
    <audio id="deer">
        <source src="deer_short.mp3" type="audio/mpeg">
    </audio>
    <audio id="pop">
        <source src="deer_pop.mp3" type="audio/mpeg">
    </audio>
    <div class="container">
        <h1>โคจัง</h1>
        <div class="chat-container">
            <form>
                <fieldset id="chat">
                    <legend>Chat</legend>
                </fieldset>
            </form>
        </div>
        <div class="bottom">
            <textarea id="input" placeholder="Type your message..."></textarea>
            <input type="button" value="Send" onclick="onClick()" id="button_okay">
        </div>
    </div>
</body>

<script>
    let name = "รุ่นน้องคุง";
    let conversation = [];
    const soundEffect = ['pop', "deer"]
    function onLoad(){
        name = prompt("กรุณากรอกชื่อตัวเอง", "รุ่นน้องคุง");
        alert("คุณชื่อ: " + name)
    }

    async function onClick(){
        const inputTextArea = document.getElementById("input");
        const chat = document.getElementById("chat")

        // If nothing is entered in the chat, ignore it.
        if(inputTextArea.value.trim() == "" || inputTextArea.value == null) return
        console.log("button pressed")
        createNewChat(name, inputTextArea.value);

        // Loading
        disableChat(true)
        // Scroll chat to bottom
        console.log("scrollheight one: ", chat.scrollHeight)
        showTypingLoadMessage()
        chat.scrollTo(0, chat.scrollHeight);

        response = await getResponse(name, inputTextArea.value.trim())

        // Loading finished
        inputTextArea.value = "";
        disableChat(false)
        removeTypingLoadMessage()


        // choose whether to play pop or deer sound effect
        const random = Math.floor(Math.random() * 10)
        const audio = document.getElementById(soundEffect[Math.floor((random+1) / 10)])
        audio.play();
        const image_name = response.match(/(?<=\[).+(?=\])/g)
        const processed_conversation = response.replace(/\[.+\]/g, "")
        if(!image_name) createNewChat("โคจัง", response)
        else{
            console.log("image: ", `stickers/${image_name[0]}.png`)
            createNewChat("โคจัง", processed_conversation, `stickers/${image_name[0]}.png`)
            console.log("chat height: ", chat.scrollHeight)
        }

        // Scroll chat to bottom
        chat.scrollTo(0, chat.scrollHeight);
        
    }

    function createNewChat(sender, text, image=null){
        const filedsetthing = document.getElementById("chat");
        const newDiv = document.createElement("div");
        newDiv.className = "Message";
        const name = document.createElement("p");
        const message = document.createElement("p");
        name.innerHTML = "<b>"+sender+"</b>";
        message.textContent = text;
        newDiv.appendChild(name)
        newDiv.appendChild(message)
        
        if(image){
            // Add an image
            let img = document.createElement("img")
            img.src = image
            img.className = "image"
            newDiv.appendChild(img)
        }

        filedsetthing.appendChild(newDiv)
    }

    function disableChat(status){
        document.getElementById("input").disabled = status;
        document.getElementById("button_okay").disabled = status;
    }

    function showTypingLoadMessage(){
        const filedsetthing = document.getElementById("chat");
        const newDiv = document.createElement("div");
        newDiv.className = "Message";
        newDiv.id = "loading_message";
        const name = document.createElement("p");
        const message = document.createElement("p");
        message.id = "loading_dot";
        name.innerHTML = "<b>"+"โคจัง"+"</b>";
        message.textContent = ".";
        newDiv.appendChild(name);
        newDiv.appendChild(message);
        filedsetthing.appendChild(newDiv);
    }

    function removeTypingLoadMessage(){
        const chat = document.getElementById("loading_message");
        chat.remove()
    }



    async function getResponse(name, message){ 
        const date = new Date();
        date.toLocaleString("th-TH", {timezone: "Indochina/Bangkok"});
        var data = {role: "user", content: `(${date})${name}:${message}`};
        conversation = conversation.concat(data)
        console.log("conversation: ", conversation)
        var daData = {
                method : "POST", 
                 headers: {
                 'Content-Type': 'application/json'
              },
             body : JSON.stringify(conversation) 
            }
        let recieve = {}
            await fetch("/koachan", daData).then(async response =>{
                recieve = await response.json();
                console.log(recieve)
                
            })
            conversation = recieve.body;
            console.log("post conversation: ", conversation)
            const splited_reply = recieve.body[recieve.body.length - 1].content.split(/\r?\n/g)
            console.log(splited_reply)
            let text = "";
            for(let i of splited_reply){
                console.log("text: ", text)
                console.log("i: ", i)
                if(i.trim() != '') {
                    console.log("here")
                    if(i.match(/(?<=โคจัง:).*/g)) text = text + i.match(/(?<=โคจัง:).*/g)[0].trim()
                    else text = text + i;
                }
            }
            console.log(text)
            return text

        
    }
</script>